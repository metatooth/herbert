- hosts: workers

  vars:
    - nodejs_version: '14.x'
    - service_description: 'Herbert in-room worker service'
    - service_user: root
    - service_file: dist/worker/main.js

  tasks:
    - name: Enable I2C
      become: yes
      shell: "raspi-config nonint do_i2c 0"

    - name: Clone 8relind-rpi
      git:
        repo: 'https://github.com/SequentMicrosystems/8relind-rpi.git'
        dest: /home/{{ ansible_user }}/8relind-rpi

    - name: Build and install 8relind-rpi
      become: yes
      make:
        chdir: /home/{{ ansible_user }}/8relind-rpi
        target: install

    - name: Install System Dependencies
      become: yes
      apt:
        update_cache: yes
        state: latest
        name: ['bluetooth', 'bluez', 'libbluetooth-dev', 'libudev-dev', 'git', 'gcc', 'g++', 'make']

    - name: Create {{ appDir }}
      file:
        path: '{{ appDir }}'
        state: directory

    - name: Create {{ appDir }}/dist
      file:
        path: '{{ appDir }}/dist'
        state: directory

    - name: Sync herbert dist
      synchronize:
        src: '{{ distDir }}/worker'
        dest: '{{ appDir }}/dist'
        recursive: yes
        delete: yes

    - name: Sync herbert shared
      synchronize:
        src: '{{ distDir }}/shared'
        dest: '{{ appDir }}/dist'
        recursive: yes
        delete: yes

    - name: Sync herbert config
      synchronize:
        src: '{{ srcDir }}/config'
        dest: '{{ appDir }}'
        recursive: yes
        delete: yes

    - name: Sync herbert package.json
      synchronize:
        src: '{{ srcDir }}/package.json'
        dest: '{{ appDir }}'

    - name: Sync herbert package-lock.json
      synchronize:
        src: '{{ srcDir }}/package-lock.json'
        dest: '{{ appDir }}'

    - name: Install nodejs {{nodejs_version}}
      include_role:
        name: geerlingguy.nodejs
        apply:
          become: yes

    - name: Install production node_modules
      command: npm install
      args:
        chdir: '{{ appDir }}'
      environment:
        NODE_ENV: production

    - name: Install worker service
      become: yes
      template:
        src: ./templates/systemd-service.j2
        dest: /etc/systemd/system/herbert-worker.service
        owner: root
        group: root
        mode: '0644'

    - name: Enable and start herbert-worker service
      become: yes
      systemd:
        name: herbert-worker
        state: restarted
        daemon_reload: yes
        enabled: yes
